/* --- Fil: src/features/visual-builder/VisualStrategyBuilder.css --- */

.visual-strategy-builder-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  border-radius: 0.5rem; /* Rounded corners */
  overflow: hidden; /* Contain children */
  box-shadow: var(--shadow-md); /* Consistent shadow */
  border: 1px solid var(--gray-200);
  background-color: white;
  height: 70vh; /* Default height, can be adjusted */
  min-height: 500px; /* Minimum height */
}
/* Disabled state overlay */
.visual-strategy-builder-container[data-disabled="true"] {
  opacity: 0.6;
  pointer-events: none; /* Prevent interaction */
}
/* Control bar styling */
.visual-strategy-controls {
  display: flex;
  gap: 0.75rem; /* Spacing between controls */
  padding: 0.75rem 1rem;
  background-color: var(--gray-50);
  border-bottom: 1px solid var(--gray-200);
  flex-wrap: wrap; /* Allow wrapping on smaller screens */
}
/* General button style within controls */
.strategy-control-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.375rem 0.75rem; /* Slightly smaller padding */
  border-radius: 0.375rem;
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.25rem;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  border: 1px solid var(--gray-300);
  background-color: white;
  color: var(--gray-700);
}
.strategy-control-btn:hover:not(:disabled) {
  background-color: var(--gray-100);
  border-color: var(--gray-400);
  transform: translateY(-1px); /* Subtle lift effect */
}
.strategy-control-btn:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5); /* Focus ring */
}
.strategy-control-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}
.strategy-control-btn svg {
    margin-right: 0.3rem; /* Space between icon and text */
    width: 14px;
    height: 14px;
}
/* Primary button style */
.strategy-control-btn.primary-btn {
  background-color: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}
.strategy-control-btn.primary-btn:hover:not(:disabled) {
  background-color: var(--primary-dark);
  border-color: var(--primary-dark);
}
/* Secondary button style */
.strategy-control-btn.secondary-btn {
  background-color: white;
  color: var(--gray-700);
  border-color: var(--gray-300);
}
.strategy-control-btn.secondary-btn:hover:not(:disabled) {
  background-color: var(--gray-50);
}
/* Danger button style */
.strategy-control-btn.delete-btn {
  border-color: var(--danger-color);
  color: var(--danger-color);
  background-color: white;
}
.strategy-control-btn.delete-btn:hover:not(:disabled) {
  background-color: var(--danger-color);
  color: white;
}
/* Spacer to push buttons */
.strategy-control-spacer {
  flex: 1; /* Takes up remaining space */
}
/* Main editor area layout */
.strategy-editor-container {
  display: flex;
  flex-direction: row; /* Side-by-side layout */
  flex-grow: 1; /* Take remaining vertical space */
  overflow: hidden; /* Prevent content overflow */
  height: 100%; /* Ensure it fills parent height */
}
/* ReactFlow wrapper */
.reactflow-wrapper {
  flex: 1; /* Take most of the space */
  height: 100%;
  position: relative; /* Needed for absolute positioning inside */
  /* border-right removed as NodeConfig panel is gone */
}

/* Node configuration panel styles removed */

/* --- Add Node Dropdown Styles (from AddNodeDropdown.css, kept here for context) --- */
.add-node-menu-header {
  padding: 0.65rem 1rem;
  font-weight: 600;
  font-size: 0.875rem;
  color: var(--gray-800);
  background-color: var(--gray-50);
  border-bottom: 1px solid var(--gray-200);
}
.add-node-menu-group {
  padding: 0.25rem 0;
}
.add-node-menu-group:not(:last-child) {
  border-bottom: 1px solid var(--gray-100); /* Lighter separator */
}
.add-node-menu-group-title {
  padding: 0.35rem 1rem;
  font-size: 0.7rem;
  color: var(--gray-500);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}
.add-node-menu-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.6rem 1rem; /* Adjusted padding */
  cursor: pointer;
  transition: background-color 0.15s ease;
  font-size: 0.875rem;
  color: var(--gray-700);
  border: none;
  background: none;
  width: 100%;
  text-align: left;
}
.add-node-menu-item:hover {
  background-color: var(--gray-100);
  color: var(--gray-900);
}
.add-node-icon {
  width: 28px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.375rem;
  transition: all 0.15s ease;
  flex-shrink: 0;
}
/* Icon background colors */
.add-node-icon.indicator { background-color: rgba(219, 39, 119, 0.1); color: rgb(190, 24, 93); }
.add-node-icon.condition { background-color: rgba(16, 185, 129, 0.1); color: rgb(5, 150, 105); }
.add-node-icon.logic { background-color: rgba(59, 130, 246, 0.1); color: rgb(37, 99, 235); }
.add-node-icon.action { background-color: rgba(239, 68, 68, 0.1); color: rgb(220, 38, 38); }

/* --- ReactFlow Specific Styles --- */
/* Ensure ReactFlow takes available space */
.react-flow__viewport {
  /* Add styles if needed, often default is fine */
}
/* Style controls */
.react-flow__controls {
  box-shadow: var(--shadow);
  border-radius: 4px;
  overflow: hidden;
  background-color: white;
}
.react-flow__controls-button {
  background-color: transparent;
  border: none;
  border-bottom: 1px solid var(--gray-200);
  color: var(--gray-600);
  width: 30px;
  height: 30px;
}
.react-flow__controls-button:last-child {
  border-bottom: none;
}
.react-flow__controls-button:hover {
  background-color: var(--gray-100);
  color: var(--gray-800);
}
/* Minimap styles */
.react-flow__minimap {
  border-radius: 4px;
  overflow: hidden;
  border: 1px solid var(--gray-300);
  background-color: var(--gray-50);
}
/* Edge styles */
.react-flow__edge path {
    /* stroke: #b1b1b7; */ /* Default in React Flow, keep or override */
    /* stroke-width: 1; */
}
.react-flow__edge.selected path,
.react-flow__edge:focus path {
    stroke: var(--primary-color); /* Highlight selected edge */
    stroke-width: 2;
}

/* --- Base Node Styles --- */
.strategy-node {
border-radius: 5px;
box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
font-size: 0.8rem;
color: var(--gray-800);
width: 190px; /* Slightly wider default width */
background-color: white;
border: 1px solid var(--gray-300); /* Default border */
transition: all 0.2s ease;
overflow: visible; /* Allow content like handles to potentially overflow visually */
height: auto; /* Allow height to adjust to content */
min-height: 60px; /* Minimum height for very simple nodes */
}

/* Node header */
.node-header {
display: flex;
align-items: center;
justify-content: space-between;
padding: 0.5rem 0.75rem;
cursor: pointer; /* Indicate clickable for expand/collapse */
border-bottom: 1px solid var(--gray-200); /* Default border */
background-color: var(--gray-50); /* Default header background */
color: var(--gray-700);
user-select: none; /* Prevent text selection on click */
}
/* Use grabbing cursor only when dragging the node, not just the header */
.strategy-node.selected:active .node-header {
   cursor: grabbing;
}
.node-title {
font-weight: 600;
font-size: 0.8rem;
text-overflow: ellipsis;
overflow: hidden;
white-space: nowrap;
flex-grow: 1; /* Allow title to take available space */
margin-right: 0.5rem; /* Space before potential icon */
}

/* Style for non-toggle icons in header */
.node-header-icon {
  margin-left: 4px; /* Space between title and icon */
  flex-shrink: 0;
  color: var(--gray-500); /* Default icon color */
}

/* Style for the toggle icon */
.edit-toggle-icon {
transition: transform 0.2s ease;
color: var(--gray-500);
flex-shrink: 0; /* Prevent icon shrinking */
margin-left: 4px; /* Space between title/other icon and toggle */
}
.node-header:hover .edit-toggle-icon {
  color: var(--gray-700);
}
/* Rotate icon when expanded (assuming .expanded class is added) */
.strategy-node.expanded .edit-toggle-icon {
transform: rotate(180deg);
}


/* Node editing styles (now always visible when expanded) */
.node-param-group {
padding: 0.6rem 0.75rem;
display: flex;
flex-direction: column;
gap: 0.35rem; /* Spacing between label and input */
}
.node-param-group:not(:last-child) {
  border-bottom: 1px solid var(--gray-100); /* Lighter separator */
}
.node-param-label {
font-size: 0.7rem;
font-weight: 500;
color: var(--gray-600);
text-transform: uppercase;
letter-spacing: 0.02em;
}
.node-input, .node-select {
font-size: 0.75rem;
padding: 0.35rem 0.5rem; /* Slightly adjusted padding */
border: 1px solid var(--gray-300);
border-radius: 3px;
width: 100%;
box-sizing: border-box; /* Include padding/border in width */
}
.node-input:focus, .node-select:focus {
outline: none;
border-color: var(--primary-color);
box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.25);
}
.node-select {
background-color: white;
appearance: none;
background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
background-position: right 0.3rem center;
background-repeat: no-repeat;
background-size: 1.2em 1.2em;
padding-right: 2rem;
}

/* Style for the summary div shown when collapsed */
.node-summary {
  padding: 0.75rem; /* Consistent padding */
  font-size: 0.8rem; /* Match node title size */
  color: var(--gray-700);
  text-align: center;
  background-color: var(--gray-25, #fcfcfc); /* Very light background */
  border-bottom: 1px solid var(--gray-100); /* Light separator */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Node connections display */
.node-connections {
display: flex;
justify-content: space-between;
padding: 0; /* Let inputs/outputs handle padding */
margin-top: 0.25rem;
position: relative; /* Context for labels */
min-height: 30px; /* Increased min-height for more space */
padding-bottom: 0.5rem; /* Add space below handles */
padding-left: 6px; /* Space for left handles */
padding-right: 6px; /* Space for right handles */
}

/* Container for handles + labels */
.connection-inputs,
.connection-outputs {
display: flex;
flex-direction: column;
gap: 14px; /* Increased gap between handle/label pairs */
padding: 0.5rem 0;
width: 50%; /* Each side takes half */
position: relative; /* For label positioning */
min-height: inherit;
}

.connection-inputs {
align-items: flex-start; /* Align items to the left */
}
.connection-outputs {
align-items: flex-end; /* Align items to the right */
}

/* Wrapper for a single handle + label */
.handle-label-wrapper {
position: relative;
display: flex;
align-items: center;
height: 10px; /* Match handle height */
width: 100%; /* Take full width of the parent container */
}

.connection-inputs .handle-label-wrapper {
justify-content: flex-start; /* Align content (label, handle) to the left */
}

.connection-outputs .handle-label-wrapper {
justify-content: flex-end; /* Align content (label, handle) to the right */
}


/* Label Positioning */
.connection-label {
position: absolute;
top: 50%;
transform: translateY(-50%);
font-size: 0.65rem;
color: var(--gray-600);
white-space: nowrap;
line-height: 1;
margin: 0;
pointer-events: none; /* Don't interfere with handle drag */
background: rgba(255, 255, 255, 0.7); /* Optional: Slight background for readability */
padding: 1px 3px;
border-radius: 2px;
}

.connection-inputs .connection-label {
left: 14px; /* Position right of the input handle */
}
.connection-outputs .connection-label {
right: 14px; /* Position left of the output handle */
}


/* --- Node Type Specific Styles --- */
/* Price Node */
.price-node .node-header { background-color: rgba(0, 65, 208, 0.1); border-color: rgba(0, 65, 208, 0.2); cursor: grab; } /* Price node not expandable */
/* Indicator Nodes */
.indicator-node .node-header { border-color: rgba(219, 39, 119, 0.2); background-color: rgba(219, 39, 119, 0.1); }
/* Condition Nodes */
.condition-node .node-header { border-color: rgba(5, 122, 85, 0.2); background-color: rgba(5, 122, 85, 0.1); }
/* Logic Nodes */
.logic-node .node-header { border-color: rgba(79, 70, 229, 0.2); background-color: rgba(79, 70, 229, 0.1); }
/* Action Nodes */
.action-node.long .node-header { background-color: rgba(16, 185, 129, 0.1); border-color: rgba(16, 185, 129, 0.2); }
.action-node.short .node-header { background-color: rgba(239, 68, 68, 0.1); border-color: rgba(239, 68, 68, 0.2); }


/* --- Handle Styles --- */
.react-flow__handle {
  width: 10px; /* Slightly larger handles */
  height: 10px;
  border-radius: 50%;
  background-color: var(--gray-400); /* Default handle color */
  border: 1px solid white;
  transition: background-color 0.2s ease, transform 0.2s ease;
  position: absolute; /* Crucial for positioning */
  z-index: 10; /* Ensure handles are above node content */
}
.react-flow__handle:hover {
    background-color: var(--gray-600);
    transform: scale(1.2);
}
.react-flow__handle-connecting {
    background-color: var(--primary-color) !important; /* Important to override hover */
    transform: scale(1.3);
    cursor: grabbing;
}
.react-flow__handle-valid {
    background-color: var(--success-color) !important; /* Important to override hover */
    transform: scale(1.3);
    cursor: crosshair;
}
.react-flow__handle-invalid {
    background-color: var(--danger-color) !important; /* Important to override hover */
     cursor: no-drop;
}

/* Position handles correctly */
.react-flow__handle-left { left: -6px; }
.react-flow__handle-right { right: -6px; }

/* Specific handle colors (examples) */
/* Use type-specific styles if needed */
.price-node .react-flow__handle { background-color: var(--blue-600, #2563eb); }
.indicator-node .react-flow__handle { background-color: var(--pink-600, #db2777); }
.condition-node .react-flow__handle { background-color: var(--success-color); }
.logic-node .react-flow__handle { background-color: var(--indigo-600, #4f46e5); }
.action-node.long .react-flow__handle { background-color: var(--success-color); }
.action-node.short .react-flow__handle { background-color: var(--danger-color); }


/* Selected node styling */
.strategy-node.selected {
  border-color: var(--primary-color) !important; /* Use important to override type-specific borders */
  border-width: 2px;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3), var(--shadow-md); /* Focus ring + shadow */
}

/* Removed output-handle-wrapper specific positioning */
/* .output-handle-wrapper { ... } */